<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
<main class="game-container">
    <h1>Snake Game</h1>
    <canvas id="game" width="400" height="400"></canvas>
    <div class="score-container">
        <p>Score: <span id="score">0</span></p>
        <p>High Score: <span id="highScore">0</span></p>
    </div>
    <div class="controls">
        <button id="restartBtn">Restart Game (r)</button>
        <button id="pauseBtn">Pause Game (space)</button>
        <button id="showInstructionsBtn">Show Instructions (i)</button>
    </div>
    <aside class="instructions">
        <h2>How to Play:</h2>
        <p>Use arrow keys to control the snake.</p>
        <p>Eat the food to grow longer and earn points.</p>
        <p>Avoid hitting the walls or your own tail!</p>
        <hr>
        <p>Press "SPACE" to pause the game.</p>
        <p>Press "R" to restart the game.</p>
    </aside>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const instructionsBtn = document.getElementById('showInstructionsBtn');
            const instructions = document.querySelector('.instructions');
            const restartBtn = document.getElementById('restartBtn');
            const pauseBtn = document.getElementById('pauseBtn');

            // Function to toggle instructions visibility
            function toggleInstructions() {
                if (instructions.style.display === 'none') {
                    instructions.style.display = 'block';
                    instructionsBtn.textContent = 'Hide Instructions (i)';
                    instructions.scrollIntoView({ behavior: 'smooth' });
                } else {
                    instructions.style.display = 'none';
                    instructionsBtn.textContent = 'Show Instructions (i)';
                    instructions.scrollTo({ top: 0, behavior: 'smooth' });
                }
            }

            // Initially hide instructions
            instructions.style.display = 'none';

            // Add click event to button
            instructionsBtn.addEventListener('click', toggleInstructions);

            // Add keyboard shortcut (i key)
            document.addEventListener('keydown', function(e) {
                if (e.key === 'i') {
                    toggleInstructions();
                }
            });

            // Simulate key press for restart button
            restartBtn.addEventListener('click', function() {
                document.dispatchEvent(new KeyboardEvent('keydown', { key: 'r' }));
            });

            // Simulate key press for pause button
            pauseBtn.addEventListener('click', function() {
                document.dispatchEvent(new KeyboardEvent('keydown', { key: ' ' }));
            });

            const gameCanvas = document.getElementById('game');

            // Swipe detection variables
            let startX, startY, endX, endY;

            // Detect swipe gestures
            gameCanvas.addEventListener('touchstart', function(e) {
                e.preventDefault() // Prevent default touch behavior like page refresh, scrolling, zooming
                const touch = e.touches[0];
                startX = touch.clientX;
                startY = touch.clientY;
            });

            gameCanvas.addEventListener('touchmove', function(e) {
                e.preventDefault() // Prevent default touch behavior like page refresh, scrolling, zooming
                const touch = e.touches[0];
                endX = touch.clientX;
                endY = touch.clientY;
            });

            gameCanvas.addEventListener('touchend', function() {
                const diffX = endX - startX;
                const diffY = endY - startY;

                if (Math.abs(diffX) > Math.abs(diffY)) {
                    // Horizontal swipe
                    if (diffX > 0) {
                        // Swipe right
                        document.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowRight' }));
                    } else {
                        // Swipe left
                        document.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowLeft' }));
                    }
                } else {
                    // Vertical swipe
                    if (diffY > 0) {
                        // Swipe down
                        document.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowDown' }));
                    } else {
                        // Swipe up
                        document.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowUp' }));
                    }
                }
            });

            // Remap WASD keys to arrow keys
            document.addEventListener('keydown', function(e) {
                switch (e.key.toLowerCase()) {
                    case 'w':
                        document.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowUp' }));
                        e.preventDefault();
                        break;
                    case 'a':
                        document.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowLeft' }));
                        e.preventDefault();
                        break;
                    case 's':
                        document.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowDown' }));
                        e.preventDefault();
                        break;
                    case 'd':
                        document.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowRight' }));
                        e.preventDefault();
                        break;
                }
            });
        });
    </script>
</main>
<script src="snake.js"></script>
</body>
</html>
